hiiiiii
this is a new line
wow this is so exiting

i am officially intrigued

Strong and Weak quotes:
'' : strong quotes
"" : weak quotes


use :set nu for line numbers
use :set nonu to disable line numbers

:s/old_str/new_str          for finding and replacing words or str in curent line.
:%s/old_str/new_str         for finding and replacing words or str in whole file.
:5,20s/old_str/new_str/gc   for ''''''' in lines 5 to 20 with confirmation 'c', dont use 'c' for no confirmation.


mktemp to just work on a temp file then vanish.

printf "%d\n" "'$var"    for ascii values

seq 1 10 does this :
1
2
3
.
.
10




{1..10} or {a..z} or {A..Z} for an array type.

echo a{1..10}
or touch,etc.


use pipe to less for viewing output in a single page on terminal.
command | less 


ascii using printf 
ASSIGNMENT:
append in a seperate file.

ascii values:
0<1<.....<A<B<C<......Z<a<b<c.....z


sort command sorts from less to high ascii values:
low to high (increasing)

eg:  sort
aa 
aA 

if sorted gives output:
aA 
aa 

example: sort.txt 
aa 
bb
cc
dd 
ee 
eE 
Bb 
90
1
2
5
6
1
23
98
45
43
12

now the sort command by default sorts character by character and through ascii values
But , if we want the numerical sort we use -n flag...

eg: sort -n sort.txt

this does such that the sum of ascii is in a sorted order.

now for reverse sort also include -r flag....
ex: sort -nr FILE 

#################################################
#  default delimiter in sort is "whitespace"    #
#  default delimiter in sort is "tab"           #
#################################################





